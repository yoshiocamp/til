3-1　forループ
for カウンタ変数 in 　繰り返す範囲
    繰り返し処理　#必ずインデント

例
'''
for i in range(6,11):               #繰り返す範囲は６～１０　11は終了値になっている為動かない
    print("hello world:" + str(i))

hello world:6
hello world:7
hello world:8
hello world:9
hello world:10
'''
つまりi変数にはじめは6を代入して実行
二回目は７，三回目は８...最後に10を代入して実行し11が来たので処理を止めるといった動作になる。

for i in range(5):            #繰り返す範囲は5回　
    print("hello world:")

hello world
hello world
hello world
hello world
hello world

3-2 条件によって繰り返し
# whileによるループ処理
#カウンタ変数を初期化
while 条件式:
    #繰り返し処理
    #カウンタ変数を更新

例
i = 1#カウンタ変数を初期化
while i <= 10:
    print(i)#繰り返し処理
    i = i + 1#カウンタ変数を更新

1
2
3
4
5
6
7
8
9
10

3-3 条件によって繰り返し２
whileループでカウンタ変数の更新を行わないと無限ループに落ちいりPCの電源を切ったり、強制終了を掛ける必要が出てくる。
i = +1は i += 1とも書き換えられる

カウントダウンするループを利用してスライムを攻撃して倒すコードを書く
#スライムを攻撃
#ダメージは1から10までランダム
#スライムのHPが０になるまでくりかえす

import random
hp =30# カウンタ変数を初期化
while hp > 0:
    hit = random.randint(1,10)
    print("スライムに" + str(hit) + "のダメージを与えた！") # 繰り返し処理
    hp -= hit# カウンタ変数を更新
print("スライムを倒した")

スライムに3のダメージを与えた！
スライムに10のダメージを与えた！
スライムに4のダメージを与えた！
スライムに10のダメージを与えた！
スライムに10のダメージを与えた！
スライムを倒した

3-4 繰り返しを使ってHTMLを作成
print("<select name=\'age\'>")
for age in range(100):
    print("<option>" + str(age +1) + "才</option>")

print("</select>")

これでHTMLで１才から１００才までのプルダウンを作ることが出来る。


3-5 データの読み込み
line = input()
print("hello" + line)
これで入力に文字を入れてから実行すると（例えばpythhonと入力してから実行すると）
hellopythonと表示される

入力した文字は数値であってもstrで読み込まれる。

数値を射て読み込みたい場合はstr関数を使って
line = int(input())
print(line * 10)とすれば
数値として読み込まれ、計算結果が表示される
ただしこの書き方では一行分の入力しか読み込めない
