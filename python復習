2,出力
print("文字列")
全て半角
３，コメントアウト
#を先頭につける
複数行をコメントアウトするときは
'''
で囲う
'''
4,HTMLを表示
pythonでHTMLとして表示したいときは""の中で文字列を囲う
<h1>見出し</h1>
<p>テキスト</p>
<b>太文字</b>
,で区切るとtextでは改行されない
end = ""を最後に着けるのでも同じ
end = "%"などにすると文字列が％で区切られる

5 変数
変数名　= 代入したい名前
一文字目は_か小文字のアルファベット

6 ランダムな数値を表示させる
数値を文字列と一緒に表示するときは
str(数値)として文字列として扱えるようにして表示させる
またランダムな数値を表示させるには
import randomをインポートした後に
random.randint(引数１,引数２)とすることで
引数１から引数２の間の整数の中からランダムで数値を表示させられるようになる
例
import random
number = random.randint(1,20)
print("スライムが" + str(number) + "匹あらわれた")

7 計算する
number = 100 +20
print(number）
なら出力は120

number = 100
print(number +20)
print(number）
　これなら出力は
120
100
となり出力する際にも演算できるが
変数の中身は変わっていないことがわかる

8 値段の計算
例
import random
apple_price = random.randint(1,3)*100	#リンゴの単価
apple_num = random.randint(1,10)	#リンゴを買う数
print("リンゴの単価:" + str(apple_price) + "円")
print("リンゴを買う数:" + str(apple_num) + "個")
total = apple_price * apple_num
print("合計金額:" + str(total) + "円")

randint関数を組み合わせることでこのようなランダムな値段とランダムな個数から値段を算出するコードも書ける
random.randint(1,3)*100とすることで１００刻みのランダム数字にすることも可能

9 データの型
number = 100 + 30		#数値
strings = "ハロー" + "paiza"	#文字列
print(number)
print(strings)
とすると
130
ハローpaiza
出る。pythonではデータの型がはっきり区別されている為
number = 100 + 30を
number = "100" + "30"
として出力すると
10030となる。これは""で囲ったことにより数値を文字列として認識したためである。
数値と文字列はデータ型が違うためそのままでは連結することが出来ない。

print(str(number) + strings)の様にStr関数を使用することでデータ型がそろい
130ハローpaizaと出力することが出来る。
しかしこれはnumber変数自体を変えているのではなくあくまで出力の中で一時的に変更しているので
この後に
print(number + 20)
と数値のデータ型で連結しても
150と数値の計算結果が出る。つまりnumber変数は数値のintger型のままであることが分かる。

2-1 条件分岐、比較演算子
基本の形はif 条件式
例えば
number = 1
if number == 1:    #==とするのは代入と区別するため演算子ではイコールを==で表現する。
    print("スキ！") #条件式が成立したときの処理　if分の中身はTAB(半角4つ分)下げる(インデントする)

条件が成立している為
スキ！と表示される

条件が成立していない(例えばnumber = 2)と何も表示されない
成立していない時の処理はelse:を使う
if number == 1:
    print("スキ！") #条件式が成立したときの処理
else:              #elseはインデントなし
    print("キライ") #条件式が成立しなかったときの処理

こうすると、条件が成立していない(例えばnumber = 2)場合だと
キライ　と表示される
if文やelseの後には:(コロン)を必ずつけないといけない。ないとエラーになる。
また
if number == 1:
    print("スキ！")や

else:             
    print("キライ")のかたまりをブロックと呼ぶ。

2-2 複数条件の組み合わせ
elifを使う
number = 1
if number == 1:
	print( "スキ！")	#条件式1が成立したときの処理
elif 条件式２:
    条件式２が成立した時の処理
else:
	print( "キライ")	#条件式が成立しなかったときの処理

例えば
number = 2
if number == 1:
	print( "スキ！")	#条件式1が成立したときの処理
elif number == 2:
    print("どちらでもない")
else:
	print( "キライ")	#条件式が成立しなかったときの処理


にするとnumberが２なので
どちらでもない　と表示される。
なお、条件式１が成り立つと条件２とelseの内容はスキップされ
条件式１と条件式２以外の条件の時はすべてelseの処理になる

elifは何個でも追加することが出来る。

2－3　比較演算子による条件分岐

例
time = 15
if time < 12:
	print("午前中")	#条件式が成立したときの処理
elif time ==12:
    print("正午")
elif time:
    print("午後")


# a == b  :aはbと等しくない
# a > b   :aはbより大きい
# a < b   :aはbより小さい
# a >= b  :aはb以上
# a <= b  :aはb以下
# a != b  :aはbと等しくない

2－4 おみくじを作る
import random

omikuji = random.randint(1,10) #1~10のランダムな値を出す。
print(omikuji) #デバック用

if omikuji == 1:
    print("大吉")
elif omikuji == 2:
    print("中吉")
elif omikuji <= 4: # 3,4
    print("小吉")
elif omikuji <= 7:　#5,6,7
    print("凶")
else:               #8,9,10
    print("大凶")
    
print(omikuji)などの様にコードを挟んで動作確認することをデバックという。
必要がなくなったらコメントアウトしておく

2-5　RPGのクリティカルヒットを再現
# スライムと戦っている。
# 1から10のサイコロをふって、
# 6未満の場合、サイコロの目だけダメージを与えたと表示。
# 6以上の場合、クリティカルヒットとして、100のダメージを与えたと表示。
import random
hit = random.randint(1,10)
print(hit)

if hit < 6:
    print("スライムに、" + str(hit) + "ダメージを与えた！")
else:
    print("クリティカルヒット！スライムに、100のダメージを与えた！")
    ]
2-6 西暦から令和を算出する

# 西暦年から令和年を求める
import datetime
seireki = datetime.date.today().year #今日の西暦年をだす。
print("西暦" + str(seireki) + "年は",end = "")　#,end = ""とすることで改行なしで次の出力を出力できる。

#西暦年から令和年を計算する
#令和1年とは西暦2019年。その差は、2018
#西暦年　-　2018　= 令和*年


reiwa = seireki - 2018
print("令和" +str(reiwa) + "年です")
