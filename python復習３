5‐1　辞書概要
リストは複数のデータを格納し、0から始まる数値で取り出すことが出来るもの
辞書も複数のデータを扱えるが違いは数値ではなく文字列をキーとしてデータを取り出せる

5-2　辞書を作る
辞書の作り方
辞書名 = {"キー":"要素名"}

'''
# リストのおさらい
enemyarray = ["スライム","モンスター","ドラゴン"]
print(enemyarray)
print(enemyarray[0])

#辞書の具体例
enemyDictionary = {"ザコ":"スライム","中ボス":"ドラゴン","ラスボス":"魔王"}
print(enemyDictionary)
print(enemyDictionary["中ボス"])

level = "ザコ"　　　　　　　　　　　#変数での指定もできる
print(enemyDictionary[level])
'''

['スライム', 'モンスター', 'ドラゴン']
スライム
{'ザコ': 'スライム', '中ボス': 'ドラゴン', 'ラスボス': '魔王'}
ドラゴン
スライム

5-3 辞書の基本操作
・要素の数を調べる　
　print(len(辞書名))
・要素の追加
　辞書名["キー名"] = "要素"
・要素の変更（更新）
　辞書名[変更したい要素のキー名] = "変更した後に使いたい要素名"
・要素の削除
　del 辞書名["削除したい要素のキー名"]

'''
enemies = {"ザコ":"スライム", "中ボス":"ドラゴン", "ラスボス":"魔王"}　#辞書作成
print(enemies)
print(enemies["中ボス"])
print(len(enemies))　　　#要素の数を調べる

enemies["ザコ２"] = "メタルモンスター"　　　#要素の追加
print(enemies)
print(len(enemies))

enemies["中ボス"] = "レッドドラゴン"　　　　#要素の変更（更新）
print(enemies)
print(len(enemies))

del enemies["ザコ"]　　　　　　　　　　　　#要素の削除
print(enemies)
print(len(enemies))
'''

{'ザコ': 'スライム', '中ボス': 'ドラゴン', 'ラスボス': '魔王'}
ドラゴン
3
{'ザコ': 'スライム', '中ボス': 'ドラゴン', 'ラスボス': '魔王', 'ザコ２': 'メタルモンスター'}
4                                                                                              #要素の数が増えている
{'ザコ': 'スライム', '中ボス': 'レッドドラゴン', 'ラスボス': '魔王', 'ザコ２': 'メタルモンスター'}　#キー名"中ボス"の要素が"レッドドラゴン"に変わっている
4
{'中ボス': 'レッドドラゴン', 'ラスボス': '魔王', 'ザコ２': 'メタルモンスター'}　　　　　　　　　　　　#["ザコ":"スライム"]が削除されて消えている
3

5-4　辞書をループで処理する
キーと要素をそれぞれ取り出すにはitems()メソッドを使う
for (カウント変数,カウント関数２) in 辞書名.items():
カウント変数にキー名、カウント変数２に要素名が格納される

'''
# 辞書のおさらい
enemies = {"ザコ":"スライム", "中ボス":"ドラゴン", "ラスボス":"魔王"}
print(enemies)
print(enemies["中ボス"])

for rank in enemies:                        #ループで出力
    print(enemies[rank] + "があらわれた！")
for (rank, enemy) in enemies.items():　　　　#キーと要素を取り出す
    print(rank + "の" + enemy + "が、あらわれた！")
'''

{'ザコ': 'スライム', '中ボス': 'ドラゴン', 'ラスボス': '魔王'}
ドラゴン
スライムがあらわれた！
ドラゴンがあらわれた！
魔王があらわれた！
ザコのスライムが、あらわれた！
中ボスのドラゴンが、あらわれた！
ラスボスの魔王が、あらわれた！


5-5 リストの整列
sorted()関数を使うことで並び順を整列することが出来る。
sorted(リスト名)
並び順を逆にするときはreverse=Trueを入れる
sorted(リスト名,reverse=True)
漢字の場合はpythonの中の基準で並びが決まっているため注意する。
'''
weapons = ["イージスソード","ウィンドスピア","アースブレイカー","イナズマハンマー"]
print(weapons)

print(sorted(weapons))
print(sorted(weapons, reverse = True))

weapons2 = ["4.イージスソード","1.ウィンドスピア","3.アースブレイカー","2.イナズマハンマー"]
print(sorted(weapons2))

weapons3 = ["バーニングソード","風神スピア","大地ブレイカー","稲妻ハンマー"]
print(sorted(weapons3))
'''

['イージスソード', 'ウィンドスピア', 'アースブレイカー', 'イナズマハンマー']
['アースブレイカー', 'イナズマハンマー', 'イージスソード', 'ウィンドスピア']　#あいうえお順になっている
['ウィンドスピア', 'イージスソード', 'イナズマハンマー', 'アースブレイカー']　#逆の順番
['1.ウィンドスピア', '2.イナズマハンマー', '3.アースブレイカー', '4.イージスソード']　#数字でもできる
['バーニングソード', '大地ブレイカー', '稲妻ハンマー', '風神スピア']　　　　　#漢字の場合は注意

5-6 辞書の整列
辞書はsortするとリストに変換されてキーのあいうえお順で表示される。
辞書は辞書で残っている
キーと要素を表示したいときは.items()を使う
タプルとはデータ小僧の一種で内容の変更は不可

'''
weapons = {"イージスシード":40,"ウィンドスピア":12,"アースブレイカー":99}
print(sorted(weapons))
print(weapons)
print(sorted(weapons.items()))
'''

['アースブレイカー', 'イージスシード', 'ウィンドスピア']
{'イージスシード': 40, 'ウィンドスピア': 12, 'アースブレイカー': 99}
[('アースブレイカー', 99), ('イージスシード', 40), ('ウィンドスピア', 12)] #items()メソッドを使うとキーと要素がペア（タプル）にされる


5-7,5-8 RPGのアイテム一覧の再現
リストと辞書を活用する
'''
# 画像用辞書
item_images = {
    "剣":"http://paiza.jp/learning/images/sword.png",
    "盾":"http://paiza.jp/learning/images/shield.png",
    "回復薬":"http://paiza.jp/learning/images/potion.png",
    "クリスタル":"http://paiza.jp/learning/images/crystal.png"　　　#アイテム名がキー、画像が要素
}

# アイテムの並び順配列
item_orders = ["クリスタル", "回復薬", "盾", "剣", "回復薬", "回復薬"]　#アイテムのリスト

# print(item_images)
# print(item_orders)

# アイテム名を取り出す
for item_name in item_orders:
# 画像ファイル名を取り出す
    print("<img src='" + item_images[item_name] + "'>")
    print(item_name + "<br>")
'''

 クリスタル
 回復薬
 盾
 剣
 回復薬
 回復薬　　#実際は画像も出ている

###演習

アイテムリストを作ってみましょう。
標準入力で出力するアイテム数と複数行のアイテム名の入力があります。
それを元に、items_imgesで定義された画像を改行せず順番に出力してみましょう。
画像の出力にはimgタグを使い、src属性に画像のファイル名を指定します。
{入力
6
回復薬
盾
クリスタル
クリスタル
剣
剣
｝
'''
items_imges = {
    "剣" : "http://paiza.jp/learning/images/sword.png",
    "盾" : "http://paiza.jp/learning/images/shield.png",
    "回復薬" : "http://paiza.jp/learning/images/potion.png",
    "クリスタル" : "http://paiza.jp/learning/images/crystal.png"
}

# ここから下を記述しよう
# 出力するアイテム数を変数に代入
item_cnt = int(input())

# 標準入力にあるアイテムを出力する
while item_cnt > 0:
  item = input()
  print("<img src = '" + items_imges[item] + "'>")
  item_cnt = item_cnt - 1
'''
